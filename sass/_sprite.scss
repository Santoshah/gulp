/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$s-about: (0px, 302px, 0px, -302px, 85px, 72px, 454px, 446px, '../images/sprite.png', 's-about', );
$s-apparel: (319px, 0px, -319px, 0px, 135px, 151px, 454px, 446px, '../images/sprite.png', 's-apparel', );
$s-bio-tech-life-sci: (0px, 0px, 0px, 0px, 167px, 151px, 454px, 446px, '../images/sprite.png', 's-bio-tech-life-sci', );
$s-business: (170px, 302px, -170px, -302px, 85px, 72px, 454px, 446px, '../images/sprite.png', 's-business', );
$s-consumer-prods: (167px, 0px, -167px, 0px, 152px, 151px, 454px, 446px, '../images/sprite.png', 's-consumer-prods', );
$s-ent-media: (0px, 151px, 0px, -151px, 137px, 151px, 454px, 446px, '../images/sprite.png', 's-ent-media', );
$s-facebook: (274px, 191px, -274px, -191px, 40px, 40px, 454px, 446px, '../images/sprite.png', 's-facebook', );
$s-food: (319px, 151px, -319px, -151px, 103px, 151px, 454px, 446px, '../images/sprite.png', 's-food', );
$s-instagram: (274px, 151px, -274px, -151px, 41px, 40px, 454px, 446px, '../images/sprite.png', 's-instagram', );
$s-mail: (422px, 151px, -422px, -151px, 30px, 21px, 454px, 446px, '../images/sprite.png', 's-mail', );
$s-phone: (422px, 172px, -422px, -172px, 21px, 27px, 454px, 446px, '../images/sprite.png', 's-phone', );
$s-plane-black: (85px, 374px, -85px, -374px, 62px, 53px, 454px, 446px, '../images/sprite.png', 's-plane-black', );
$s-plane: (0px, 374px, 0px, -374px, 85px, 72px, 454px, 446px, '../images/sprite.png', 's-plane', );
$s-product-development: (340px, 302px, -340px, -302px, 85px, 72px, 454px, 446px, '../images/sprite.png', 's-product-development', );
$s-retail: (137px, 151px, -137px, -151px, 137px, 151px, 454px, 446px, '../images/sprite.png', 's-retail', );
$s-sales: (255px, 302px, -255px, -302px, 85px, 72px, 454px, 446px, '../images/sprite.png', 's-sales', );
$s-twitter: (274px, 231px, -274px, -231px, 40px, 40px, 454px, 446px, '../images/sprite.png', 's-twitter', );
$s-vimeo: (147px, 374px, -147px, -374px, 40px, 40px, 454px, 446px, '../images/sprite.png', 's-vimeo', );
$s-welcome: (85px, 302px, -85px, -302px, 85px, 72px, 454px, 446px, '../images/sprite.png', 's-welcome', );
$spritesheet-sprites: ($s-about, $s-apparel, $s-bio-tech-life-sci, $s-business, $s-consumer-prods, $s-ent-media, $s-facebook, $s-food, $s-instagram, $s-mail, $s-phone, $s-plane-black, $s-plane, $s-product-development, $s-retail, $s-sales, $s-twitter, $s-vimeo, $s-welcome, );
$spritesheet: (454px, 446px, '../images/sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
